generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  ID         Int      @id @default(autoincrement())
  googleID   String   @unique @map("google_id")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  balance    Decimal  @default(0) @db.Decimal(10, 2)
  status     Int      @default(0)
  email      String?
  familyName      String?
  name       String?
  avatar     String?
  logs       Log[]
  transactions  Transaction[]
  walletID    Int?     @unique
  wallet       Wallet?   @relation(fields: [walletID], references: [ID])
}

model Wallet {
  ID            Int    @id @default(autoincrement())
  walletAddress String @unique @map("wallet_address")
  iv            String?
  encryptedData String?
  userID        Int?
  listen        Boolean?  @default(false)
  user          User?  
  }


model Log {
  ID        Int      @id @default(autoincrement())
  userID    Int
  total     Decimal?  @db.Decimal(10, 2)
  type      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  eventID  String?
  user      User     @relation(fields: [userID], references: [ID])
  matchID   Int?
  match     Match?    @relation(fields: [matchID], references: [ID])

  @@index([userID])
}

model Match{
  ID        Int      @id @default(autoincrement())
  over      Decimal? @db.Decimal(10, 2)
  under     Decimal? @db.Decimal(10, 2)
  total     Decimal? @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  logs      Log[]
}



model Transaction {
  ID        Int      @id @default(autoincrement())
  txnID     String   @unique @default(uuid())
  userID    Int
  createdAt DateTime @default(now())
  updatedAt DateTime
  total     Decimal? @db.Decimal(10, 2)
  wallet    String?
  type      String
  timestamp Int?
  solscan   String?
  user      User     @relation(fields: [userID], references: [ID])

  @@index([userID])
}
